==============================================================
Continue
==============================================================

continue;

--------------------------------------------------------------

(source_file
  (continue_statement))

==============================================================
Break
==============================================================

break;

--------------------------------------------------------------

(source_file
  (break_statement))

==============================================================
Return
==============================================================

return;

--------------------------------------------------------------

(source_file
  (return_statement))

==============================================================
Function Call
==============================================================

echo("test");
%test.setTransform("0 100 -20 0 0 1 3.14");
$test.getTransform();
GameConnection::OnDeath(%client,"blah",100);

--------------------------------------------------------------

(source_file
  (function_call_statement
    (function_call_expression
      (function_identifier
        (name))
      (parenthesized_expressions
        (string
          (string_content)))))
  (method_call_statement
    (method_call_expression
      (variable
        (variable_identifier))
      (function_identifier
        (name))
    (parenthesized_expressions
      (string
        (string_content)))))
  (method_call_statement
    (method_call_expression
      (variable
        (variable_identifier))
      (function_identifier
        (name))
      (parenthesized_expressions)))
  (function_call_statement
    (function_call_expression
      (function_identifier
        (name)
        (name))
      (parenthesized_expressions
        (variable
          (variable_identifier))
        (string
          (string_content))
        (number)))))

==============================================================
Switch
==============================================================

switch(%var)
{
case 1 or 2 or 3:
  return 100;
case 4 and 5:
  return 200;
}

switch$(%var)
{
case "string":
  return true;
default:
  return false;
}

--------------------------------------------------------------

(source_file
  (switch_statement
    (parenthesized_expression
      (variable
        (variable_identifier)))
      (case_statement
        (binary_expression
          (binary_expression
            (number)
            (number))
          (number))
        (return_statement
          (number))
      (case_statement
        (binary_expression (number)
          (number))
        (return_statement
          (number)))))
  (switch$_statement
    (parenthesized_expression
      (variable
        (variable_identifier)))
    (case_statement
      (string
        (string_content))
      (return_statement
        (true))
    (case_statement
      (return_statement
        (false))))))

==============================================================
For
==============================================================

for(%i = 0; %i < 100; %i++)
{
  echo("Hello World");
}

for(%i = %count-1; %i >= 0; %i--)
  echo("Hello World Backward");

--------------------------------------------------------------

(source_file
  (for_statement
    (assignment_expression
      (variable
        (variable_identifier))
      (number))
    (binary_expression
      (variable
        (variable_identifier))
      (number))
    (assignment_expression
      (variable
        (variable_identifier)))
    (function_call_statement
      (function_call_expression
        (function_identifier
          (name))
        (parenthesized_expressions
          (string
            (string_content))))))
  (for_statement
    (assignment_expression
      (variable 
        (variable_identifier))
      (binary_expression
        (variable
          (variable_identifier))
        (number)))
    (binary_expression
      (variable
        (variable_identifier))
      (number))
    (assignment_expression
      (variable
        (variable_identifier)))
    (function_call_statement
      (function_call_expression
        (function_identifier
          (name))
        (parenthesized_expressions
          (string
            (string_content)))))))

==============================================================
While
==============================================================

while(true)
{
  echo("Hello World");
}

while(true)
  echo("Hello World Backward");

--------------------------------------------------------------

(source_file
  (while_statement
    (parenthesized_expression
      (true))
    (function_call_statement
      (function_call_expression
        (function_identifier
          (name))
        (parenthesized_expressions
          (string
            (string_content))))))
  (while_statement
    (parenthesized_expression
      (true))
    (function_call_statement
      (function_call_expression
        (function_identifier
          (name))
        (parenthesized_expressions
          (string
            (string_content)))))))

==============================================================
If
==============================================================

if(false)
{
  return;
}
else if(false)
{
  return;
}
else
{
  return;
}

if(false)
  return;
else if(FaLsE)
  return;
else
  return;

--------------------------------------------------------------

(source_file
  (if_statement
    (parenthesized_expression
      (false))
    (return_statement)
    (else_statement
      (if_statement
        (parenthesized_expression
          (false))
        (return_statement)
        (else_statement
          (return_statement)))))
  (if_statement
    (parenthesized_expression
      (false))
    (return_statement)
    (else_statement
      (if_statement
        (parenthesized_expression
          (false))
        (return_statement)
        (else_statement
          (return_statement))))))

==============================================================
New
==============================================================

new ScriptObject();
%var = new ScriptObject(MyObject)
{
  superClass = MyParent;
  class = myClass;
};

--------------------------------------------------------------

(source_file
  (new_statement
    (new_expression
      (name)))
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier))
    (new_expression
      (name)
      (name)
      (name)
      (name)
      (name)
      (name)))))

==============================================================
Assignment
==============================================================

%test = 1000;
$test /= 1000;
%test[1] *= 1000;
$test::test::test >>= 5000;
%test++;
%test.field += -1;
%test -= 1000;

--------------------------------------------------------------

(source_file
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier))
      (number)))
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier))
      (number)))
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier)
        (array
          (number)))
      (number)))
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier))
      (number)))
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier))))
  (assignment_statement
    (assignment_expression
      (field
        (variable
          (variable_identifier))
        (name))
      (unary_expression
        (number))))
  (assignment_statement
    (assignment_expression
      (variable
        (variable_identifier))
      (number))))
